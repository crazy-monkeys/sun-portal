{"version":3,"sources":["webpack:///src/components/pages/claimForm.vue","webpack:///./src/components/pages/claimForm.vue?1ee1","webpack:///./src/components/pages/claimForm.vue","webpack:///./src/components/pages/claimForm.vue?f660","webpack:///./src/components/pages/claimForm.vue?991d"],"names":["claimForm","name","components","Breadcrumb","data","formMod","accessory","country","bus","dropValue","endUser","person","contactNumber","contactEmail","address","cityName","stateName","postCode","addressLine1","addressLine2","contact","billType","abn","businessName","serviceCall","weather","location","weatherMsg","battery","model","batteryMsg","shippingAddress","businessPartner","productNumber","productModel","productId","products","installDate","type","rules","contact.billType","required","message","triggle","contact.contactEmail","contact.person","contact.contactNumber","contact.address.cityName","contact.address.addressLine1","contact.address.addressLine2","contact.address.stateName","contact.address.postCode","endUser.contactEmail","endUser.person","endUser.contactNumber","endUser.address.cityName","endUser.address.addressLine1","endUser.address.addressLine2","endUser.address.stateName","endUser.address.postCode","serviceCall.fault","serviceCall.description","serviceCall.shippingAddress","radio","submitLoading","shippingAddressRadio","fileList","form","extends_default","computed","breadcrumbList","path","this","$t","watch","form.contact.billType","handler","n","o","console","log","$formTest","resetForm","$refs","methods","_methods","openTerm","window","open","shippingAddressRadioChangeHandle","v","_ref","_ref$address","str","filter","i","trim","join","submitUpload","upload","submit","uploadOnChangeHandle","file","getProductInfo","_this","Object","registration","serialNumber","then","res","code","productModelValue","id","catch","err","_this2","params","FormData","forEach","item","index","append","raw","typeof_default","j","x","constructor","Array","$message","success","timer","setTimeout","$router","push","clearTimeout","onSubmit","submitForm","reset","clearFiles","changeFile","val","defineProperty_default","created","mounted","_this3","$on","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","direction","_v","ref","disabled","size","label-width","label-position","_s","gutter","span","label","prop","on","blur","value","callback","$$v","$set","expression","readonly","value-format","length","vlaue","_e","prefix-icon","placeholder","fault","lcd","resize","rows","description","change","action","on-change","file-list","auto-upload","slot","checked","tag","for","click","loading","$event","_withStripped","esExports","staticRenderFns","pages_claimForm","disposed","Component","__webpack_require__","normalizeComponent","ssrContext","options","__file","__webpack_exports__","module","exports","version","sources","names","mappings","sourcesContent","content","locals"],"mappings":"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","file":"static/js/3.452b5663a8e2a5453922.js","sourcesContent":["<template>\n  <el-container class=\"claimForm\" direction=\"vertical\">\n    <Breadcrumb :breadcrumbList='breadcrumbList' />\n    <!-- <div class=\"desc\">\n      <img src=\"../../../static/reg.jpeg\" alt=\"图片\">\n    </div> -->\n    <el-form :disabled=\"submitLoading\" size=\"small\" :rules='rules' class=\"form\" ref=\"form\" :model=\"form\" label-width=\"80px\" label-position=\"top\">\n      <h2>{{ $t('claimForm.productDetails.title') }}</h2>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('claimForm.productDetails.serialNumber')\" prop='productNumber'>\n            <el-input v-model=\"form.productNumber\" @blur='getProductInfo'></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('claimForm.productDetails.productModel')\">\n            <el-input v-model=\"form.productModel\" :readonly=\"true\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('claimForm.productDetails.dateOfInstallation')\" prop='installDate'>\n            <el-date-picker\n              class=\"datePicker\"\n              v-model=\"form.installDate\"\n              type=\"date\"\n              value-format=\"yyyy-MM-dd\"\n              >\n            </el-date-picker>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('claimForm.productDetails.wantToClaimAnAccessory')\">\n            <el-input v-model=\"form.accessory\" :disabled=\"form.productNumber.length==0\" ></el-input>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <h2>{{ $t('claimForm.claimantContactDetails.title') }}</h2>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"24\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.type')\" prop='contact.billType'>\n              <el-radio-group v-model=\"form.contact.billType\" >\n                <el-radio label=\"Business\" value='Business'>{{ $t('claimForm.claimantContactDetails.Business') }}</el-radio>\n                <el-radio label=\"Individual\" vlaue='Individual'>{{ $t('claimForm.claimantContactDetails.Individual') }}</el-radio>\n              </el-radio-group>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row :gutter=\"20\" >\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.ABN')\" v-if=\"form.country=='AU'&&form.contact.billType=='Business'\" >\n            <el-input v-model=\"form.contact.abn\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        \n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.name')\" >\n            <el-input v-model=\"form.contact.businessName\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.contactPerson')\" prop='contact.person'>\n            <el-input v-model=\"form.contact.person\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        \n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.contactNumber')\" prop='contact.contactNumber'>\n            <el-input v-model=\"form.contact.contactNumber\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.email')\" prop='contact.contactEmail'>\n            <el-input  v-model=\"form.contact.contactEmail\" prefix-icon=\"el-icon-message\" :disabled=\"form.contact.billType=='Individual' ? true :false\" :placeholder=\"$t('claimForm.claimantContactDetails.business.emailPlaceholder')\">\n            </el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.addressLine1')\" prop='contact.address.addressLine1'>\n            <el-input v-model=\"form.contact.address.addressLine1\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.addressLine2')\" prop='contact.address.addressLine2'>\n            <el-input v-model=\"form.contact.address.addressLine2\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.citydistrict')\" prop='contact.address.cityName'>\n            <el-input v-model=\"form.contact.address.cityName\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.stateProvince')\" prop='contact.address.stateName'>\n            <el-input v-model=\"form.contact.address.stateName\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType=='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.business.postCode')\" prop='contact.address.postCode'>\n            <el-input v-model=\"form.contact.address.postCode\" :disabled=\"form.contact.billType=='Individual' ? true :false\"></el-input>\n          </el-form-item>\n        </el-col>\n        \n      <!-- </el-row> -->\n\n      <!-- <h2 v-if=\"form.contact.billType!='Business'\">End User Contact Details</h2> -->\n      <!-- <el-row v-if=\"form.contact.billType!='Business'\" :gutter=\"20\"> -->\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.name')\" prop='endUser.person'>\n            <el-input type=\"text\" v-model=\"form.endUser.person\" ></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.contactNumber')\"  prop='endUser.contactNumber'>\n            <el-input type=\"text\" v-model=\"form.endUser.contactNumber\" ></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.email')\" prop='endUser.contactEmail'>\n            <el-input  v-model=\"form.endUser.contactEmail\" prefix-icon=\"el-icon-message\"  :placeholder=\"$t('claimForm.claimantContactDetails.person.emailPlaceholder')\">\n            </el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.addressLine1')\" prop='endUser.address.addressLine1'>\n            <el-input v-model=\"form.endUser.address.addressLine1\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.addressLine2')\" prop='endUser.address.addressLine2'>\n            <el-input v-model=\"form.endUser.address.addressLine2\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.citydistrict')\" prop='endUser.address.cityName'> \n            <el-input v-model=\"form.endUser.address.cityName\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.stateProvince')\" prop='endUser.address.stateName'>\n            <el-input v-model=\"form.endUser.address.stateName\"></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"form.contact.billType!='Business'\">\n          <el-form-item :label=\"$t('claimForm.claimantContactDetails.person.postCode')\" prop='endUser.address.postCode'>\n            <el-input v-model=\"form.endUser.address.postCode\"></el-input>\n          </el-form-item>\n        </el-col>\n        \n      </el-row>\n      <el-row  :gutter=\"20\">\n        <el-col :span=\"12\">\n          <h2>{{ $t('claimForm.faultDetails.title') }}</h2>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n              <el-form-item :label=\"$t('claimForm.faultDetails.theFaultIs')\" prop='serviceCall.fault'>\n                  <el-radio-group v-model=\"form.serviceCall.fault\">\n                    <el-radio label=\"Permanent\">{{ $t('claimForm.faultDetails.permanent') }}</el-radio>\n                    <el-radio label=\"Intermittent\">{{ $t('claimForm.faultDetails.intermittent') }}</el-radio>\n                  </el-radio-group>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item :label=\"$t('claimForm.faultDetails.lcd')\">\n                <el-input v-model=\"form.serviceCall.lcd\" ></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item :label=\"$t('claimForm.faultDetails.description')\" prop='serviceCall.description'>\n                <el-input type=\"textarea\" resize=\"none\" :rows=\"4\" v-model=\"form.serviceCall.description\" ></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-col>\n        <el-col :span=\"12\">\n          <h2>{{ $t('claimForm.addressDetails.title') }}</h2>\n            <el-row :gutter=\"20\">\n              <el-col :span=\"24\">\n                <el-form-item label=\"\" >\n                    <el-radio-group v-model=\"shippingAddressRadio\" @change=\"shippingAddressRadioChangeHandle\">\n                      <el-radio label=\"1\" value='1'>{{ $t('claimForm.addressDetails.sameAsClaimant') }}</el-radio>\n                      <!-- <el-radio label=\"2\" value='2'>Same as end user</el-radio> -->\n                      <el-radio label=\"3\" value='3'>{{ $t('claimForm.addressDetails.other') }}</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n              </el-col>\n              \n              <el-col :span=\"24\">\n                <el-form-item :label=\"$t('claimForm.addressDetails.shippingAddress')\" prop=\"serviceCall.shippingAddress\">\n                  <el-input type=\"textarea\" resize=\"none\" :rows=\"4\" v-model=\"form.serviceCall.shippingAddress\" :readonly=\"shippingAddressRadio=='3' ? false: true\" ></el-input>\n                </el-form-item>\n              </el-col>\n              \n            </el-row>\n\n        </el-col>\n      </el-row>\n\n      <h2>{{ $t('claimForm.otherDetails.title') }}</h2>\n      <el-row :gutter=\"20\" >\n        <el-col :span=\"12\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"24\" v-if=\"form.country=='AU'\">\n              <el-form-item :label=\"$t('claimForm.otherDetails.title')\">\n                  <el-radio-group v-model=\"form.serviceCall.weather\">\n                    <el-radio label=\"Yes\">Yes</el-radio>\n                    <el-radio label=\"No\">No</el-radio>\n                  </el-radio-group>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\" v-if=\"form.country=='AU'\">\n              <el-form-item class=\"one\" :label=\"$t('claimForm.otherDetails.location')\" v-if=\"form.serviceCall.weather=='Yes' ? true:false\">\n                <el-input v-model=\"form.serviceCall.location\" ></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item :label=\"$t('claimForm.otherDetails.weatherMsg')\">\n                <el-input type=\"textarea\" resize=\"none\" :rows=\"4\" v-model=\"form.serviceCall.weatherMsg\" ></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"24\" v-if=\"form.country=='AU'\">\n              <el-form-item :label=\"$t('claimForm.otherDetails.battery')\">\n                  <el-radio-group v-model=\"form.serviceCall.battery\">\n                    <el-radio label=\"Yes\">Yes</el-radio>\n                    <el-radio label=\"No\">No</el-radio>\n                  </el-radio-group>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\" v-if=\"form.country=='AU'\">\n              <el-form-item class=\"one\" :label=\"$t('claimForm.otherDetails.model')\" v-if=\"form.serviceCall.battery=='Yes' ? true:false\">\n                <el-input v-model=\"form.serviceCall.model\" ></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item class=\"one\" :label=\"$t('claimForm.otherDetails.batteryMsg')\">\n                <el-input type=\"textarea\" resize=\"none\" :rows=\"4\" v-model=\"form.serviceCall.batteryMsg\" ></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-col>\n      </el-row>\n\n      <h2>{{ $t('claimForm.fileUpload.title') }}</h2>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item :label=\"$t('claimForm.fileUpload.uploadLabel')\">\n            <el-upload\n              class=\"\"\n              ref=\"upload\"\n              action=\"https://jsonplaceholder.typicode.com/posts/\"\n              :on-change=\"uploadOnChangeHandle\"\n              :file-list=\"fileList\"\n              :auto-upload=\"false\">\n              <el-button slot=\"trigger\" size=\"small\" type=\"primary\">{{ $t('claimForm.fileUpload.uploadBtn') }}</el-button>\n              <!-- <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button> -->\n              <!-- <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div> -->\n            </el-upload>\n          </el-form-item>\n        </el-col>\n        \n        <el-col :span=\"24\">\n          <el-form-item label=\" \">\n            <el-checkbox v-model=\"form.checked\">\n              <i18n path=\"claimForm.toTerm\" tag=\"label\" for=\"claimForm.tos\">\n                <el-button type=\"text\" @click=\"openTerm\">{{ $t('claimForm.tos') }}</el-button> \n              </i18n>\n            </el-checkbox>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-form-item class=\"sub\">\n        <el-button type=\"primary\" @click=\"onSubmit('form')\" :disabled=\"!form.checked\" :loading='submitLoading'>{{ $t('claimForm.submit') }}</el-button>\n        <el-button @click=\"reset\">{{ $t('claimForm.reset') }}</el-button>\n      </el-form-item>\n    </el-form>\n  </el-container>\n</template>\n\n<script>\nimport Breadcrumb from '../coms/Breadcrumb'\nimport Bus from \"../../bus/bus.js\";\nimport { productInfo,submitClaim } from '@/api/registration'\nexport default {\n  name: \"ClaimForm\",\n  components:{\n    Breadcrumb\n  },\n  data() {\n    const formMod = {\n        accessory: '',\n        country:Bus.dropValue,\n        endUser:{\n          person:'',\n          contactNumber:\"\",\n          contactEmail:'',\n          address:{\n            cityName:'',\n            stateName:'',\n            postCode:'',\n            addressLine1:'',\n            addressLine2:'',\n          }\n        },\n        contact:{\n          billType:'Business',\n          abn:'',\n          businessName:\"\",\n          person:'',\n          contactNumber:\"\",\n          contactEmail:'',\n          address:{\n            cityName:'',\n            stateName:'',\n            postCode:'',\n            addressLine1:'',\n            addressLine2:'',\n          }\n        },\n        serviceCall:{\n          weather:'',\n          location:'',\n          weatherMsg:'',\n          battery:'',\n          model:'',\n          batteryMsg:'',\n          shippingAddress:'',\n        },\n        businessPartner:'',\n        productNumber: '',\n        productModel: '',\n        productId:[],\n        products:[],\n        installDate:'',\n        type:2\n      };\n    return {\n      rules:{\n        'contact.billType':[\n          {required:true,message:'Type is required',triggle:['change','blur']}\n        ],\n        'contact.contactEmail':[\n          {required:true,message:'Email is required',triggle:['change','blur']}\n        ],\n        'contact.person':[\n          {required:true,message:'Person is required',triggle:['change','blur']}\n        ],\n        'contact.contactNumber':[\n          {required:true,message:'ContactNumber is required',triggle:['change','blur']}\n        ],\n        'contact.address.cityName':[\n          {required:true,message:'City is required',triggle:['change','blur']}\n        ],\n        'contact.address.addressLine1':[\n          {required:true,message:'AddressLine1 is required',triggle:['change','blur']}\n        ],\n        'contact.address.addressLine2':[\n          {required:true,message:'AddressLine2 is required',triggle:['change','blur']}\n        ],\n        'contact.address.stateName':[\n          {required:true,message:'State is required',triggle:['change','blur']}\n        ],\n        'contact.address.postCode':[\n          {required:true,message:'Post code is required',triggle:['change','blur']}\n        ],\n\n        'endUser.contactEmail':[\n          {required:true,message:'Email is required',triggle:['change','blur']}\n        ],\n        'endUser.person':[\n          {required:true,message:'Name is required',triggle:['change','blur']}\n        ],\n        // 'endUser.contactNumber':[\n        //   {required:true,message:'ContactNumber is required',triggle:['change','blur']}\n        // ],\n        'endUser.contactNumber':[\n          {required:true,message:'ContactNumber is required',triggle:['change','blur']}\n        ],\n        'endUser.address.cityName':[\n          {required:true,message:'City is required',triggle:['change','blur']}\n        ],\n        'endUser.address.addressLine1':[\n          {required:true,message:'AddressLine1 is required',triggle:['change','blur']}\n        ],\n        'endUser.address.addressLine2':[\n          {required:true,message:'AddressLine2 is required',triggle:['change','blur']}\n        ],\n        'endUser.address.stateName':[\n          {required:true,message:'State is required',triggle:['change','blur']}\n        ],\n        'endUser.address.postCode':[\n          {required:true,message:'Post code is required',triggle:['change','blur']}\n        ],\n        installDate:[\n          {required:true,message:'InstallDate is required',triggle:['change','blur']}\n        ],\n        productNumber:[\n          {required:true,message:'Serial number is required',triggle:['change','blur']}\n        ],\n        'serviceCall.fault':[\n          {required:true,message:'Fault is required',triggle:['change','blur']}\n        ],\n        'serviceCall.description':[\n          {required:true,message:'Fault Description is required',triggle:['change','blur']}\n        ],\n        'serviceCall.shippingAddress':[\n          {required:true,message:'ShippingAddress is required',triggle:['change','blur']}\n        ],\n      },\n      radio:'',\n      submitLoading:false,\n      \n      shippingAddressRadio:'',\n      fileList:[],\n      formMod,\n      form: { ...formMod }\n    };\n  },\n  computed:{\n    breadcrumbList(){\n      return [\n        {\n          path:'/warranty/registration',\n          name:this.$t('claimForm.breadcrumb.warranty')\n        },\n        {\n          path:'/warranty/claim/form',\n          name:this.$t('claimForm.breadcrumb.claimForm')\n        }\n      ]\n    }\n  },\n  watch:{\n    'form.contact.billType':{\n      handler:function(n,o){\n        if(n=='Individual'){\n          console.log(1111)\n          this.form.contact.abn=''\n          this.form.contact.businessName=''\n          this.form.contact.person=''\n          this.form.contact.contactNumber=''\n          this.form.contact.contactEmail=''\n          this.form.contact.address.cityName=''\n          this.form.contact.address.stateName=''\n          this.form.contact.address.postCode=''\n          this.form.contact.address.addressLine1=''\n          this.form.contact.address.addressLine2=''\n          this.$formTest.resetForm(this.$refs['form'],['contact.abn','contact.businessName','contact.person','contact.contactNumber','contact.contactEmail','contact.address.cityName','contact.address.stateName','contact.address.postCode','contact.address.addressLine1','contact.address.addressLine2'])\n        }else{\n          console.log(2222)\n          this.form.endUser.person=''\n          this.form.endUser.contactNumber=''\n          this.form.endUser.contactEmail=''\n          this.form.endUser.address.cityName=''\n          this.form.endUser.address.stateName=''\n          this.form.endUser.address.postCode=''\n          this.form.endUser.address.addressLine1=''\n          this.form.endUser.address.addressLine2=''\n          this.$formTest.resetForm(this.$refs['form'],['endUser.person','endUser.contactNumber','endUser.contactEmail','endUser.address.cityName','endUser.address.stateName','endUser.address.postCode','endUser.address.addressLine1','endUser.address.addressLine2'])\n        }\n      }\n    }\n  },\n  methods: {\n    openTerm(){\n      window.open(Bus.dropValue =='BR' ?'../../../sun-portal/v/static/01_Politica de Garantia_Rev.3.pdf':'../../../sun-portal/v/static/Sungrow Manufacturer Warranty.pdf');\n    },\n    shippingAddressRadioChangeHandle(v) {\n        if(v === '1' ){\n            const {\n              address: {\n                addressLine1,\n                addressLine2,\n                cityName,\n                stateName,\n                postCode\n              },\n              person,\n              contactNumber,\n            } = this.form.contact.billType=='Business' ? this.form.contact : this.form.endUser;\n            const str = [\n              this.form.contact.businessName,\n              addressLine1,\n              addressLine2,\n              cityName,\n              stateName,\n              postCode,\n              person ? `ATTN:${person}` : '',\n              contactNumber,\n            ].filter(i => i.trim()).join(',');\n            this.form.serviceCall.shippingAddress = str;\n        }else{\n          this.form.serviceCall.shippingAddress = ''\n        }\n    },\n    submitUpload() {\n      this.$refs.upload.submit();\n    },\n    uploadOnChangeHandle(file, fileList) {\n      this.fileList = fileList;\n    },\n    getProductInfo(){\n      if(this.form.productNumber){\n        productInfo({serialNumber:this.form.productNumber}).then(res=>{\n          if(res.data.code==1){\n            this.form.productModel = res.data.data.productModelValue\n            this.form.businessPartner = res.data.data.businessPartner\n\n            // this.form.productId = [res.data.data.id]\n            this.form.products = [{\n              serialNumber:this.form.productNumber,\n              productId:res.data.data.id,\n              productModel:res.data.data.productModelValue,\n            }]\n          }else{\n            this.form.productModel = ''\n          }\n        }).catch(err=>{\n            this.form.productModel = ''\n          console.log(err)\n        })\n      }else{\n        this.form.productModel = ''\n        this.form.accessory = ''\n      }\n    },\n    submit(){\n      this.submitLoading = true\n      this.form.country = Bus.dropValue\n      var params = new FormData()\n      this.fileList.forEach((item,index) => {\n        params.append('files['+index+']', item.raw);\n      })\n      var data = this.form\n      for (let i in data) {\n        // // console.log(i,data[i])\n        if(typeof(data[i]) == 'object'){\n          for(let j in data[i]){\n            // console.log(data[i][j])\n            if(typeof(data[i][j]) == 'object'){\n              for(let x in data[i][j]){\n                // console.log(data[i][j][x])\n                if(data[i][j][x] || data[i][j][x]===0){\n                  if(data[i].constructor===Array){\n                    params.append(i+'['+j+']'+'.'+x,data[i][j][x])\n                  }else{\n                    params.append(i+'.'+j+'.'+x,data[i][j][x])\n                  }\n                }\n              }\n            }else{\n                if(data[i][j] || data[i][j]===0){\n                    params.append(i+'.'+j,data[i][j])\n                }\n            }\n          }\n        }else{\n          if(data[i] || data[i]===0){\n            params.append(i,data[i])\n          }\n        }\n      }\n      console.log(params)\n      submitClaim(params).then(res=>{\n        if(res.data.code==1){\n          this.submitLoading = false\n          this.$message.success(this.$t('claimForm.submitSuccessMsg', [res.data.data]))\n          const timer = setTimeout(() => {\n            this.$router.push({\n              name:'Home'\n            })\n            clearTimeout(timer);\n          }, 3*1000);\n        }\n      }).catch(err=>{\n        this.submitLoading = false\n      })\n    },\n    onSubmit(form) {\n      this.$formTest.submitForm(this.$refs[form],this.submit)\n    },\n    reset(){\n      this.form={\n        accessory: '',\n        country:Bus.dropValue,\n        endUser:{\n          person:'',\n          contactNumber:\"\",\n          contactEmail:'',\n          address:{\n            cityName:'',\n            stateName:'',\n            postCode:'',\n            addressLine1:'',\n            addressLine2:'',\n          }\n        },\n        contact:{\n          billType:'Business',\n          abn:'',\n          businessName:\"\",\n          person:'',\n          contactNumber:\"\",\n          contactEmail:'',\n          address:{\n            cityName:'',\n            stateName:'',\n            postCode:'',\n            addressLine1:'',\n            addressLine2:'',\n          }\n        },\n        serviceCall:{\n          weather:'',\n          location:'',\n          weatherMsg:'',\n          battery:'',\n          model:'',\n          batteryMsg:'',\n          shippingAddress:'',\n        },\n        businessPartner:'',\n        productNumber: '',\n        productModel: '',\n        productId:[],\n        products:[],\n        installDate:'',\n        type:2\n      }\n      console.log(this.form)\n      this.$refs.upload.clearFiles();\n    },\n    changeFile(val){\n      console.log(val)\n    },\n    submitUpload() {\n      this.$refs.upload.submit();\n    },\n    handleRemove(file, fileList) {5555\n      console.log(file, fileList);\n    },\n    handlePreview(file) {\n      console.log(file);\n    }\n  },\n  created(){\n  },\n  mounted(){\n    Bus.$on('dropValue',(res)=>{\n      this.form.country = res\n    })\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang='scss' >\n.claimForm {\n  height: 100%;\n  .desc {\n    // height: 500px;\n    // line-height: 500px;\n    text-align: center;\n    // background: orange;\n    font-size: 30px;\n    img{\n      width: 100%;\n      display: inline-block\n    }\n  }\n  .form{\n    padding: 20px;\n    .one{\n      .el-form-item__label{\n        line-height: 64px;\n      }\n    }\n    h2{\n      padding: 10px 0;\n      color: #FF7F00\n    }\n    .datePicker,.el-select{\n      width: 100% ;\n    }\n    .sub{\n      margin-top: 20px;\n    }\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/pages/claimForm.vue","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-container\",\n    { staticClass: \"claimForm\", attrs: { direction: \"vertical\" } },\n    [\n      _c(\"Breadcrumb\", { attrs: { breadcrumbList: _vm.breadcrumbList } }),\n      _vm._v(\" \"),\n      _c(\n        \"el-form\",\n        {\n          ref: \"form\",\n          staticClass: \"form\",\n          attrs: {\n            disabled: _vm.submitLoading,\n            size: \"small\",\n            rules: _vm.rules,\n            model: _vm.form,\n            \"label-width\": \"80px\",\n            \"label-position\": \"top\"\n          }\n        },\n        [\n          _c(\"h2\", [_vm._v(_vm._s(_vm.$t(\"claimForm.productDetails.title\")))]),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 6 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"claimForm.productDetails.serialNumber\"),\n                        prop: \"productNumber\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        on: { blur: _vm.getProductInfo },\n                        model: {\n                          value: _vm.form.productNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"productNumber\", $$v)\n                          },\n                          expression: \"form.productNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 6 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"claimForm.productDetails.productModel\")\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { readonly: true },\n                        model: {\n                          value: _vm.form.productModel,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"productModel\", $$v)\n                          },\n                          expression: \"form.productModel\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 6 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\n                          \"claimForm.productDetails.dateOfInstallation\"\n                        ),\n                        prop: \"installDate\"\n                      }\n                    },\n                    [\n                      _c(\"el-date-picker\", {\n                        staticClass: \"datePicker\",\n                        attrs: { type: \"date\", \"value-format\": \"yyyy-MM-dd\" },\n                        model: {\n                          value: _vm.form.installDate,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"installDate\", $$v)\n                          },\n                          expression: \"form.installDate\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 6 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\n                          \"claimForm.productDetails.wantToClaimAnAccessory\"\n                        )\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { disabled: _vm.form.productNumber.length == 0 },\n                        model: {\n                          value: _vm.form.accessory,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"accessory\", $$v)\n                          },\n                          expression: \"form.accessory\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"h2\", [\n            _vm._v(_vm._s(_vm.$t(\"claimForm.claimantContactDetails.title\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"claimForm.claimantContactDetails.type\"),\n                        prop: \"contact.billType\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-radio-group\",\n                        {\n                          model: {\n                            value: _vm.form.contact.billType,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form.contact, \"billType\", $$v)\n                            },\n                            expression: \"form.contact.billType\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"el-radio\",\n                            { attrs: { label: \"Business\", value: \"Business\" } },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.$t(\n                                    \"claimForm.claimantContactDetails.Business\"\n                                  )\n                                )\n                              )\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"el-radio\",\n                            {\n                              attrs: {\n                                label: \"Individual\",\n                                vlaue: \"Individual\"\n                              }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.$t(\n                                    \"claimForm.claimantContactDetails.Individual\"\n                                  )\n                                )\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 6 } },\n                [\n                  _vm.form.country == \"AU\" &&\n                  _vm.form.contact.billType == \"Business\"\n                    ? _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.ABN\"\n                            )\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.abn,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.contact, \"abn\", $$v)\n                              },\n                              expression: \"form.contact.abn\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.name\"\n                            )\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.businessName,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.contact, \"businessName\", $$v)\n                              },\n                              expression: \"form.contact.businessName\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.contactPerson\"\n                            ),\n                            prop: \"contact.person\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.person,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.contact, \"person\", $$v)\n                              },\n                              expression: \"form.contact.person\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.contactNumber\"\n                            ),\n                            prop: \"contact.contactNumber\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.contactNumber,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.contact, \"contactNumber\", $$v)\n                              },\n                              expression: \"form.contact.contactNumber\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.email\"\n                            ),\n                            prop: \"contact.contactEmail\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              \"prefix-icon\": \"el-icon-message\",\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false,\n                              placeholder: _vm.$t(\n                                \"claimForm.claimantContactDetails.business.emailPlaceholder\"\n                              )\n                            },\n                            model: {\n                              value: _vm.form.contact.contactEmail,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.contact, \"contactEmail\", $$v)\n                              },\n                              expression: \"form.contact.contactEmail\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.addressLine1\"\n                            ),\n                            prop: \"contact.address.addressLine1\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.address.addressLine1,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.contact.address,\n                                  \"addressLine1\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.contact.address.addressLine1\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.addressLine2\"\n                            ),\n                            prop: \"contact.address.addressLine2\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.address.addressLine2,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.contact.address,\n                                  \"addressLine2\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.contact.address.addressLine2\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.citydistrict\"\n                            ),\n                            prop: \"contact.address.cityName\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.address.cityName,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.contact.address,\n                                  \"cityName\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.contact.address.cityName\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.stateProvince\"\n                            ),\n                            prop: \"contact.address.stateName\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.address.stateName,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.contact.address,\n                                  \"stateName\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.contact.address.stateName\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType == \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.business.postCode\"\n                            ),\n                            prop: \"contact.address.postCode\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled:\n                                _vm.form.contact.billType == \"Individual\"\n                                  ? true\n                                  : false\n                            },\n                            model: {\n                              value: _vm.form.contact.address.postCode,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.contact.address,\n                                  \"postCode\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.contact.address.postCode\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.name\"\n                            ),\n                            prop: \"endUser.person\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"text\" },\n                            model: {\n                              value: _vm.form.endUser.person,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.endUser, \"person\", $$v)\n                              },\n                              expression: \"form.endUser.person\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.contactNumber\"\n                            ),\n                            prop: \"endUser.contactNumber\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"text\" },\n                            model: {\n                              value: _vm.form.endUser.contactNumber,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.endUser, \"contactNumber\", $$v)\n                              },\n                              expression: \"form.endUser.contactNumber\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.email\"\n                            ),\n                            prop: \"endUser.contactEmail\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              \"prefix-icon\": \"el-icon-message\",\n                              placeholder: _vm.$t(\n                                \"claimForm.claimantContactDetails.person.emailPlaceholder\"\n                              )\n                            },\n                            model: {\n                              value: _vm.form.endUser.contactEmail,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form.endUser, \"contactEmail\", $$v)\n                              },\n                              expression: \"form.endUser.contactEmail\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.addressLine1\"\n                            ),\n                            prop: \"endUser.address.addressLine1\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.form.endUser.address.addressLine1,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.endUser.address,\n                                  \"addressLine1\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.endUser.address.addressLine1\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.addressLine2\"\n                            ),\n                            prop: \"endUser.address.addressLine2\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.form.endUser.address.addressLine2,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.endUser.address,\n                                  \"addressLine2\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.endUser.address.addressLine2\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.citydistrict\"\n                            ),\n                            prop: \"endUser.address.cityName\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.form.endUser.address.cityName,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.endUser.address,\n                                  \"cityName\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.endUser.address.cityName\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.stateProvince\"\n                            ),\n                            prop: \"endUser.address.stateName\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.form.endUser.address.stateName,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.endUser.address,\n                                  \"stateName\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.endUser.address.stateName\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.form.contact.billType != \"Business\"\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\n                              \"claimForm.claimantContactDetails.person.postCode\"\n                            ),\n                            prop: \"endUser.address.postCode\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.form.endUser.address.postCode,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.form.endUser.address,\n                                  \"postCode\",\n                                  $$v\n                                )\n                              },\n                              expression: \"form.endUser.address.postCode\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 12 } },\n                [\n                  _c(\"h2\", [\n                    _vm._v(_vm._s(_vm.$t(\"claimForm.faultDetails.title\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 20 } },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                label: _vm.$t(\n                                  \"claimForm.faultDetails.theFaultIs\"\n                                ),\n                                prop: \"serviceCall.fault\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"el-radio-group\",\n                                {\n                                  model: {\n                                    value: _vm.form.serviceCall.fault,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.form.serviceCall,\n                                        \"fault\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"form.serviceCall.fault\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"el-radio\",\n                                    { attrs: { label: \"Permanent\" } },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"claimForm.faultDetails.permanent\"\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"el-radio\",\n                                    { attrs: { label: \"Intermittent\" } },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"claimForm.faultDetails.intermittent\"\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                label: _vm.$t(\"claimForm.faultDetails.lcd\")\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                model: {\n                                  value: _vm.form.serviceCall.lcd,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form.serviceCall, \"lcd\", $$v)\n                                  },\n                                  expression: \"form.serviceCall.lcd\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                label: _vm.$t(\n                                  \"claimForm.faultDetails.description\"\n                                ),\n                                prop: \"serviceCall.description\"\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"textarea\",\n                                  resize: \"none\",\n                                  rows: 4\n                                },\n                                model: {\n                                  value: _vm.form.serviceCall.description,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.form.serviceCall,\n                                      \"description\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"form.serviceCall.description\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 12 } },\n                [\n                  _c(\"h2\", [\n                    _vm._v(_vm._s(_vm.$t(\"claimForm.addressDetails.title\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 20 } },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"\" } },\n                            [\n                              _c(\n                                \"el-radio-group\",\n                                {\n                                  on: {\n                                    change: _vm.shippingAddressRadioChangeHandle\n                                  },\n                                  model: {\n                                    value: _vm.shippingAddressRadio,\n                                    callback: function($$v) {\n                                      _vm.shippingAddressRadio = $$v\n                                    },\n                                    expression: \"shippingAddressRadio\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"el-radio\",\n                                    { attrs: { label: \"1\", value: \"1\" } },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"claimForm.addressDetails.sameAsClaimant\"\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"el-radio\",\n                                    { attrs: { label: \"3\", value: \"3\" } },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"claimForm.addressDetails.other\"\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                label: _vm.$t(\n                                  \"claimForm.addressDetails.shippingAddress\"\n                                ),\n                                prop: \"serviceCall.shippingAddress\"\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"textarea\",\n                                  resize: \"none\",\n                                  rows: 4,\n                                  readonly:\n                                    _vm.shippingAddressRadio == \"3\"\n                                      ? false\n                                      : true\n                                },\n                                model: {\n                                  value: _vm.form.serviceCall.shippingAddress,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.form.serviceCall,\n                                      \"shippingAddress\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"form.serviceCall.shippingAddress\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"h2\", [_vm._v(_vm._s(_vm.$t(\"claimForm.otherDetails.title\")))]),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 12 } },\n                [\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 20 } },\n                    [\n                      _vm.form.country == \"AU\"\n                        ? _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"claimForm.otherDetails.title\"\n                                    )\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"el-radio-group\",\n                                    {\n                                      model: {\n                                        value: _vm.form.serviceCall.weather,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.form.serviceCall,\n                                            \"weather\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"form.serviceCall.weather\"\n                                      }\n                                    },\n                                    [\n                                      _c(\n                                        \"el-radio\",\n                                        { attrs: { label: \"Yes\" } },\n                                        [_vm._v(\"Yes\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"el-radio\",\n                                        { attrs: { label: \"No\" } },\n                                        [_vm._v(\"No\")]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.form.country == \"AU\"\n                        ? _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              (_vm.form.serviceCall.weather == \"Yes\"\n                              ? true\n                              : false)\n                                ? _c(\n                                    \"el-form-item\",\n                                    {\n                                      staticClass: \"one\",\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"claimForm.otherDetails.location\"\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _c(\"el-input\", {\n                                        model: {\n                                          value: _vm.form.serviceCall.location,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.form.serviceCall,\n                                              \"location\",\n                                              $$v\n                                            )\n                                          },\n                                          expression:\n                                            \"form.serviceCall.location\"\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                label: _vm.$t(\n                                  \"claimForm.otherDetails.weatherMsg\"\n                                )\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"textarea\",\n                                  resize: \"none\",\n                                  rows: 4\n                                },\n                                model: {\n                                  value: _vm.form.serviceCall.weatherMsg,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.form.serviceCall,\n                                      \"weatherMsg\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"form.serviceCall.weatherMsg\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 12 } },\n                [\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 20 } },\n                    [\n                      _vm.form.country == \"AU\"\n                        ? _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"claimForm.otherDetails.battery\"\n                                    )\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"el-radio-group\",\n                                    {\n                                      model: {\n                                        value: _vm.form.serviceCall.battery,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.form.serviceCall,\n                                            \"battery\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"form.serviceCall.battery\"\n                                      }\n                                    },\n                                    [\n                                      _c(\n                                        \"el-radio\",\n                                        { attrs: { label: \"Yes\" } },\n                                        [_vm._v(\"Yes\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"el-radio\",\n                                        { attrs: { label: \"No\" } },\n                                        [_vm._v(\"No\")]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.form.country == \"AU\"\n                        ? _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              (_vm.form.serviceCall.battery == \"Yes\"\n                              ? true\n                              : false)\n                                ? _c(\n                                    \"el-form-item\",\n                                    {\n                                      staticClass: \"one\",\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"claimForm.otherDetails.model\"\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _c(\"el-input\", {\n                                        model: {\n                                          value: _vm.form.serviceCall.model,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.form.serviceCall,\n                                              \"model\",\n                                              $$v\n                                            )\n                                          },\n                                          expression: \"form.serviceCall.model\"\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              staticClass: \"one\",\n                              attrs: {\n                                label: _vm.$t(\n                                  \"claimForm.otherDetails.batteryMsg\"\n                                )\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"textarea\",\n                                  resize: \"none\",\n                                  rows: 4\n                                },\n                                model: {\n                                  value: _vm.form.serviceCall.batteryMsg,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.form.serviceCall,\n                                      \"batteryMsg\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"form.serviceCall.batteryMsg\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"h2\", [_vm._v(_vm._s(_vm.$t(\"claimForm.fileUpload.title\")))]),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 12 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"claimForm.fileUpload.uploadLabel\")\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-upload\",\n                        {\n                          ref: \"upload\",\n                          attrs: {\n                            action:\n                              \"https://jsonplaceholder.typicode.com/posts/\",\n                            \"on-change\": _vm.uploadOnChangeHandle,\n                            \"file-list\": _vm.fileList,\n                            \"auto-upload\": false\n                          }\n                        },\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              attrs: {\n                                slot: \"trigger\",\n                                size: \"small\",\n                                type: \"primary\"\n                              },\n                              slot: \"trigger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"claimForm.fileUpload.uploadBtn\"))\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \" \" } },\n                    [\n                      _c(\n                        \"el-checkbox\",\n                        {\n                          model: {\n                            value: _vm.form.checked,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form, \"checked\", $$v)\n                            },\n                            expression: \"form.checked\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"i18n\",\n                            {\n                              attrs: {\n                                path: \"claimForm.toTerm\",\n                                tag: \"label\",\n                                for: \"claimForm.tos\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { type: \"text\" },\n                                  on: { click: _vm.openTerm }\n                                },\n                                [_vm._v(_vm._s(_vm.$t(\"claimForm.tos\")))]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { staticClass: \"sub\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    disabled: !_vm.form.checked,\n                    loading: _vm.submitLoading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.onSubmit(\"form\")\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"claimForm.submit\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\"el-button\", { on: { click: _vm.reset } }, [\n                _vm._v(_vm._s(_vm.$t(\"claimForm.reset\")))\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-78b6ab96\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-78b6ab96\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/claimForm.vue\n// module id = null\n// module chunks = ","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-78b6ab96\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./claimForm.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./claimForm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./claimForm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-78b6ab96\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./claimForm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/components/pages/claimForm.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-78b6ab96\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-78b6ab96\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/claimForm.vue\n// module id = null\n// module chunks = ","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \"\\n.claimForm{height:100%\\n}\\n.claimForm .desc{text-align:center;font-size:30px\\n}\\n.claimForm .desc img{width:100%;display:inline-block\\n}\\n.claimForm .form{padding:20px\\n}\\n.claimForm .form .one .el-form-item__label{line-height:64px\\n}\\n.claimForm .form h2{padding:10px 0;color:#FF7F00\\n}\\n.claimForm .form .datePicker,.claimForm .form .el-select{width:100%\\n}\\n.claimForm .form .sub{margin-top:20px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"/Users/Bill/Documents/work/idea/three/sun-portal-view/src/components/pages/claimForm.vue\",\"claimForm.vue\"],\"names\":[],\"mappings\":\";AAspBA,WACE;ACrpBF;ADopBA,iBAKI,iBAAA,CAEA;ACzpBJ;ADkpBA,qBASM,UAAA,CACA;AC1pBN;ADgpBA,iBAcI;AC5pBJ;AD8oBA,2CAiBQ;AC7pBR;AD4oBA,oBAqBM,cAAA,CACA;AChqBN;AD0oBA,yDAyBM;ACjqBN;ADwoBA,sBA4BM;AClqBN\",\"file\":\"claimForm.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.claimForm {\\n  height: 100%;\\n  .desc {\\n    // height: 500px;\\n    // line-height: 500px;\\n    text-align: center;\\n    // background: orange;\\n    font-size: 30px;\\n    img{\\n      width: 100%;\\n      display: inline-block\\n    }\\n  }\\n  .form{\\n    padding: 20px;\\n    .one{\\n      .el-form-item__label{\\n        line-height: 64px;\\n      }\\n    }\\n    h2{\\n      padding: 10px 0;\\n      color: #FF7F00\\n    }\\n    .datePicker,.el-select{\\n      width: 100% ;\\n    }\\n    .sub{\\n      margin-top: 20px;\\n    }\\n  }\\n}\\n\\n\",\"\\n.claimForm{height:100%\\n}\\n.claimForm .desc{text-align:center;font-size:30px\\n}\\n.claimForm .desc img{width:100%;display:inline-block\\n}\\n.claimForm .form{padding:20px\\n}\\n.claimForm .form .one .el-form-item__label{line-height:64px\\n}\\n.claimForm .form h2{padding:10px 0;color:#FF7F00\\n}\\n.claimForm .form .datePicker,.claimForm .form .el-select{width:100%\\n}\\n.claimForm .form .sub{margin-top:20px\\n}\\n\"]}]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-78b6ab96\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/sass-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/pages/claimForm.vue\n// module id = VaMF\n// module chunks = 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-78b6ab96\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./claimForm.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"b3b672ae\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-78b6ab96\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./claimForm.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-78b6ab96\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./claimForm.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-78b6ab96\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/sass-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/pages/claimForm.vue\n// module id = lDzl\n// module chunks = 3"],"sourceRoot":""}