<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazy.portal.dao.system.RoleMapper">
  <resultMap id="BaseResultMap" type="com.crazy.portal.entity.system.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="active" jdbcType="SMALLINT" property="active" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_type" jdbcType="INTEGER" property="roleType" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, active, create_time, create_user_id, role_code, role_name, role_type,update_time, update_user_id
  </sql>

  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.crazy.portal.entity.system.Role" keyProperty="id">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazy.portal.entity.system.Role">
    update t_role
    <set>
      <if test="active != null">
        active = #{active,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="queryRoleList" resultMap="BaseResultMap" parameterType="com.crazy.portal.entity.system.Role">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_role where active = 1
    <if test="roleCode != null">
      and role_code = #{roleCode}
    </if>
    order by create_time
  </select>

  <select id="findRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_role a inner join t_user_role b on a.role_id = b.role_id where b.user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="findRoleByCode" resultMap="BaseResultMap">
    select * from t_role
    where role_code = #{roleCode}
  </select>

  <select id="findByName" resultMap="BaseResultMap">
    select * from t_role
    where role_name = #{roleName}
  </select>

  <select id="findRolesByResourceId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_role a inner join t_role_resource b on a.role_id = b.role_id where b.resource_id = #{resourceId}
  </select>


  <select id="findAllRoles" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_role where active = 1
  </select>

  <select id="findRoleByType" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_role where role_type = #{roleType} and active = 1
  </select>


</mapper>